// DontAsk.pkg// Copyright 1995-98 S. Weyer. All Rights Reserved Worldwide// see dontask.nwt// define this as an NTK package for convenienceconstant kDontAsk 		:= "DontAsk";constant kVersionNum 	:= "3.4";constant kBetaVersion 	:= "";if not IsGlobalConstant('kBuild20)then DefineGlobalConstant('kBuild20, platformVersion.platformFile = '|Newton 2.0|);if not IsGlobalConstant('kBuild1x)then DefineGlobalConstant('kBuild1x, not kBuild20);DefineGlobalConstant('kVersionString,	kVersionNum & kBetaVersion &	(if kDebugOn then "D") &	(if kProfileOn then "P") &	(if not kIgnoreNativeKeyword then "N") &	(if kBuild20 then "-2"));DefineGlobalConstant('kVersion, kDontAsk && kVersionString);Print(kVersion && DateNTime(time()));DefineGlobalConstant('kPkgSymbol, Intern(kPackageName)); // kAppSymbol='autoPrint(kPkgSymbol);DefineGlobalConstant('keySym, 'alphaKeyboard);DefineGlobalConstant('kSize,5); // dot sizepartData := { // slots to add to the keyboard view// this is set each system reset/card insertion; could store in a system preference?// prompt as usual (default). modified in DontAsk.viewClickScript. used in kbd.keywordScript & viewDrawScriptaskWords: true,dontAskTemplate: nil, // the "button" template, to be added as a child in kbd.viewSetupChildrenScriptkeywordScript: func(x)	if askWords	then inherited:keywordScript(x), // default (prompt) behaviorviewSetupChildrenScript: func()	if shrunken // only do this if prompt isn't being displayed	then begin		// I think Graffiti patch adds a viewSetupFormScript method 		// and sets stepChildren there, so this seems to peacefully coexist...		if not stepChildren		then stepChildren := [];		AddArraySlot(stepChildren,dontAskTemplate);		end	else inherited:?viewSetupChildrenScript(), // not really necessary, but just in case...viewSetupFormScript: func()	begin		inherited:viewSetupFormScript();		// fix a bug in the standard keyboard		// viewBounds is wrong if kbd icon was used to "close" while a prompt was up		// don't worry about cloning since shrunken is true initially		if not shrunken and			(viewBounds.bottom-viewBounds.top) = (saveBounds.bottom-saveBounds.top)		then viewBounds.top := viewBounds.top - 22;	end,};partData.dontAskTemplate := {// a simple "button".// a checkbox might be nicer but there's no really no room in kbd// and adding a Preference panel seems very inconvenient to user// note: constants can be defined symbolically with optional viewcnst.pkg plug-inviewClass: clView, // just a vanilla viewviewFlags: 513,    // vClickable + vVisible// left,top,width,height. left&top relative to left&bottom, between Dict icon & OptionviewBounds: RelBounds(22,-7,kSize,kSize),viewJustify: 128,  // vjParentBottomV (left, bottom aligned)viewDrawScript: func()	:DrawShape(MakeOval(0,0,kSize,kSize), // left,top,right,bottom		{transferMode: 0, // modeCopy		fillPattern:			if askWords			then vfFillWhite			else vfFillBlack			}),viewClickScript: func(unit)	begin		askWords := not askWords; // toggle in parent (alphakeyboard)		:dirty(); // redraw. returns TRUE	end,};SetPartFrameSlot('DoNotInstall, func() TRUE);InstallScript := func(partFrame,removeFrame)// this only installs (and works) on 1.x Newtons (see DoNotInstall function)begin	local slot,val, kbd := GetRoot().(keySym);	// we could check visibility & redo children. simpler just to close it...	kbd:close();	// copy some values into built-in keyboard VIEW	// and stash slots in removeFrame for later cleanup	foreach slot,val in partFrame.partData	do begin		slot := EnsureInternal(slot);		removeFrame.(slot) := kbd.(slot) := val;		end;	// button appears next time kbd openedend;RemoveScript := func(removeFrame)begin	local slot, val, kbd := GetRoot().(keySym);	// we could check visibility & redo children. simpler just to close it...	kbd:close(); // if kbd still open & card is removed, then "Newton Still Needs the Card" !	// remove slots we added in installScript	foreach slot,val in removeFrame	do RemoveSlot(kbd,slot);end