kSlotHelp.viewFormat := [flags:	// integer version{item: "System(0)", 		value: tsSystem, mask: tsFamilyMask},{item: "User/Fancy(1)",		value: tsFancy, mask: tsFamilyMask},{item: "Simple(2)",			value: tsSimple, mask: tsFamilyMask},{item: "Edit/Casual(3)", 	value: if kBuild20 then tsHWFont, mask: tsFamilyMask},'pickSeparator{item: "Size:", value: kNumItems,	mask: tsSizeMask, shift: tsSizeShift, offset: 6, length: 24},'pickSeparator,{item: "tsPlain",			value: tsPlain, mask: tsFaceMask},{item: "tsBold",			value: tsBold, mask: tsFaceMask},			//0x00100000{item: "tsItalic",			value: tsItalic, mask: tsFaceMask},			//0x00200000{item: "tsUnderline",		value: tsUnderline, mask: tsFaceMask},		//0x00400000{item: "tsOutline",			value: tsOutline, mask: tsFaceMask},		//0x00800000{item: "tsSuperScript",		value: tsSuperScript, mask: tsFaceMask},	//0x08000000{item: "tsSubScript",		value: tsSubScript, mask: tsFaceMask},		//0x10000000{item: "tsUndefinedFace",	value: tsUndefinedFace, mask: tsFaceMask},	//0x20000000'pickSeparator,{item: "simpleFont9",		value: simpleFont9, combo: true},			//0x00002402	{family: 'geneva,...}{item: "simpleFont10",		value: simpleFont10, combo: true},			//0x00002802{item: "simpleFont12",		value: simpleFont12, combo: true},			//0x00003002{item: "simpleFont18",		value: simpleFont18, combo: true},			//0x00004802{item: "userFont9",			value: userFont9, combo: true},				//0x00002401	{family: 'newYork,...}{item: "userFont10",		value: userFont10, combo: true},			//0x00002801{item: "userFont12",		value: userFont12, combo: true},			//0x00003001{item: "userFont18",		value: userFont18, combo: true},			//0x00004801];if kBuild20then ArrayMunger(kSlotHelp.viewFormat, Length(kSlotHelp.viewFormat), 0, [{item: "editFont10",		value: editFont10, combo: true},			// 0x00002803; {family:'handwriting, face:0, size:10}{item: "editFont12",		value: editFont12, combo: true},			// 0x00003003; {family:'handwriting, face:0, size:12}{item: "editFont18",		value: editFont18, combo: true},			// 0x00004803; {family:'handwriting, face:0, size:18}], 0, nil);kSlotHelp.viewFormatF := [flags:	// frame version{item: "Espy", value: 'espy}{item: "Size:",{item: "kFaceNormal:				kFaceNormal,				//0x000kFaceBold:					kFaceBold,					//0x001kFaceItalic:				kFaceItalic,				//0x002kFaceUnderline:				kFaceUnderline,				//0x004kFaceOutline:				kFaceOutline,				//0x008kFaceSuperScript:			kFaceSuperScript,			//0x080kFaceSubScript:				kFaceSubScript,				//0x100});/* more generally, you can create your own font specs based on some built-in fonts:look at fonts global variable, e.g.,   ['espy, 'geneva, 'newYork]{family: <one of: 'espy, 'geneva, 'newyork, ...> [see global var fonts] face: <combination of flags>, // see kFace vars below size: <integer>, // fixed sizes like 9,10,12,18 or scalable? }*/ROM_fontSystem9,  ROM_fontSystem9Bold,  ROM_fontSystem9UnderlineROM_fontSystem10, ROM_fontSystem10Bold, ROM_fontSystem10UnderlineROM_fontSystem12, ROM_fontSystem12Bold, ROM_fontSystem12UnderlineROM_fontSystem14, ROM_fontSystem14Bold, ROM_fontSystem14Underline,ROM_fontSystem18, ROM_fontSystem18Bold, ROM_fontsystem18UnderlineROM_helveticaFont, ROM_symbolFont, ROM_systemFont, ROM_systemPSfont,ROM_systemSymbolFont, ROM_timesromanFont*/