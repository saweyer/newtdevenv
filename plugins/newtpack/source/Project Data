// NewtPack (Newt Packages) (autopart) 3.5// Copyright 1995-2001 S. Weyer. All Rights Reserved Worldwideconstant kAutoCnst 		:= "NewtPack";constant kVersionNum 	:= "3.5";constant kVersionInt	:= 35;constant kBetaVersion 	:= "d";constant kDemoVersion	:= NIL;constant kFile4			:= "pack";constant kSlotSymbol 	:= 'protos;constant kConstantSymbol:= 'protoPackage;constant kPartDataSymbol:= 'protoPackage;DefineGlobalConstant('kOmitPkgSlots, '[		// added by NewtDevEnv	_parent, _MyParent_, existingPackage, pkgSymbol, sizeHint,	newtSymbol, noOpen, devSignature, requires, rFrame,	// standard (already copied/used elsewhere)	version, partData, copyProtected, compressed, dispatchOnly, // icon, autoClose,	copyright, installScript, removeScript, shortTitle,	parts,	]);// remaining?: DoNotInstall, deletionScript, labels, TapAction, iconPro, ...constant kPartHeaderSize := 32;// more in AutoInstallRemove/*getpkgrefinfo(getpkgref("LunaObj:TKnollSys", GetStores()[1])).parts[0]._importTable#6004DE19 [{name: |L-LibContent:Lunaware|, major: 1, minor: 0},            {name: |L-LibURL:Lunaware|, major: 1, minor: 0}]getpkgrefinfo(getpkgref("LunaObj:TKnollSys", GetStores()[1])).partsgetpkgrefinfo(getpkgref("LS1 Libs 2.1Bc306", GetStores()[1])).partslunit := getpkgrefinfo(objectpkgref(getglobals().|newtdevenv:tknollsys|.constants.lunaobj.protolocation));call func(parts, sym)begin	local i;	for i:=1 to Length(parts)-1	do if parts[i]._ExportTable and parts[i]._ExportTable[0].name = sym	then return i;end with (lunit.parts, '|L-LibContent:Lunaware|)setcontains(lunit.parts[10]._exporttable[0].objects, getglobals().|newtdevenv:tknollsys|.constants.lunaobj.protolocation)*/