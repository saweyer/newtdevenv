call func(fr)begin local sym,val;foreach sym,val in frdo begin Print(sym); Print(val); endend with (platformFile.viewClasses)linkedSubview{_proto: ntLinkedSubview,  __ntRequired: {viewBounds: "RECT"}}clView{viewClass: 74,  viewFlags: 1,  viewFormat: 0,  __ntRequired: {viewBounds: "RECT", viewFlags: "NUMB", viewFormat: "NUMB"}}clPictureView{viewClass: 76,  icon: NIL,  viewFlags: 1,  __ntRequired: {icon: "PICT", viewBounds: "RECT", viewFlags: "NUMB", viewFormat: "NUMB"}}clEditView{viewClass: 77,  viewFlags: 1,  viewFormat: 337,  viewlinepattern: "nil",  viewLineSpacing: 20,  __ntRequired: {viewFlags: "NUMB", viewFormat: "NUMB", viewBounds: "RECT"},  __ntOptional: {viewlinepattern: "EVAL", viewLineSpacing: "NUMB"},  __ntHelp: {viewlinepattern: "A custom pattern used to draw lines in the view."}}clParagraphView{viewClass: 81,  styles: "[4, simpleFont18]",  tabs: "[10, 20, 30, 40]",  text: ""Text"",  textFlags: "nil",  viewFlags: 1,  viewFont: "simpleFont18",  viewFormat: 12625,  viewJustify: 0,  viewLineSpacing: 20,  __ntRequired: {viewBounds: "RECT", viewFlags: "NUMB", viewFont: "EVAL", viewFormat: "NUMB", viewLineSpacing: "NUMB"},  __ntOptional: {styles: "EVAL", tabs: "EVAL", text: "EVAL", textFlags: "EVAL"},  __ntHelp: {styles: "An array of alternating run lengths and font information, if multiple font styles are used.", tabs: "An array of up to 8 tab-stop positions, in pixels.", text: "The text to display in the view"}}clPolygonView{viewClass: 82,  viewFlags: 1,  viewFormat: 512,  points: "nil",  timeStamp: "nil",  viewSetupFormScript: "func()begin	self.points := arrayToPoints([10, 5, 0, 0, 0, 18, 18, 18, 18, 0, 0, 0]);end",  __ntRequired: {viewBounds: "RECT", viewFormat: "NUMB", viewFlags: "NUMB", points: "EVAL"},  __ntOptional: {timeStamp: "EVAL"},  __ntHelp: {points: "A binary data structure containing polygon data."}}clRemoteView{viewClass: 88,  __ntRequired: {viewBounds: "RECT", viewFlags: "NUMB", viewFormat: "NUMB"}}clMonthView{viewClass: 80,  datesFont: "ROM_fontSystem9",  labelFont: "ROM_fontSystem9Bold",  monthChangedScript: "func()beginend",  selectedDates: "nil",  singleDay: TRUE,  viewFlags: 513,  viewSetupFormScript: "func()begin	self.selectedDates := [Time()];end",  __ntRequired: {datesFont: "EVAL", labelFont: "EVAL", selectedDates: "EVAL", viewBounds: "RECT", viewFlags: "NUMB", viewFormat: "NUMB", viewSetupFormScript: "SCPT"},  __ntOptional: {monthChangedScript: "SCPT", singleDay: "BOOL"},  __ntHelp: {monthChangedScript: "Called when the user changes the selection.", selectedDates: "Default dates selected in the view, usually a slot in the parent.", singleDay: "Limits selection to a single day if non-nil."}}clOutline{viewClass: 105,  browsers: "[{List:[{ name: "Top level heading" },{ level: 2, name: "First level 2 head" },{ level: 3, name: "A level 3 head" },{ level: 2, name: "Another level 2 head" },{ name: "Another top level heading" }]}]",  clickSound: "ROM_flip",  outlineClickScript: "func(index, dummy)begin	true; // This function must return trueend",  viewFlags: 515,  viewFont: "ROM_fontSystem10",  __ntRequired: {browsers: "EVAL", outlineClickScript: "SCPT", viewBounds: "RECT", viewFlags: "NUMB", viewFont: "EVAL"},  __ntOptional: {clickSound: "EVAL", viewFormat: "NUMB"}}clKeyboardView{viewClass: 79,  keyDefinitions: "[[keyVUnit, keyVUnit,					$a,  $a,		keyHUnit + keyVUnit + keyFramed + keyAutoHilite + keyRoundingUnit*3,					$b,  $b,		keyHUnit + keyVUnit + keyFramed + keyAutoHilite + keyRoundingUnit*3],				[keyVUnit, keyVUnit,					$c,  $c,		keyHUnit + keyVUnit + keyFramed + keyAutoHilite + keyRoundingUnit*3,					$d,  $d,		keyHUnit + keyVUnit + keyFramed + keyAutoHilite + keyRoundingUnit*3]				]",  keyArrayIndex: 0,  keyHighlightKeys: "[]",  keyResultsAreKeycodes: NIL,  keyReceiverView: "'viewFrontKey",  keySound: "nil",  keyPressScript: "func(key)begin	print(key);end",  viewFlags: 513,  __ntRequired: {keyArrayIndex: "INTG", keyDefinitions: "EVAL", keyHighlightKeys: "EVAL", keyPressScript: "SCPT", keyReceiverView: "EVAL", keyResultsAreKeycodes: "BOOL", keySound: "EVAL", viewBounds: "RECT", viewFlags: "NUMB"},  __ntOptional: {viewFont: "EVAL", viewFormat: "NUMB"},  __ntHelp: {keyArrayIndex: "Dynamically determine the array element to be used for a key legend or result.", keyDefinitions: "An array that defines the individual keys.", keyHighlightKeys: "Array of keys to be highlighted on the keyboard.", keyPressScript: "Called whenver a key is pressed.", keyReceiverView: "View that key presses are sent to if no KeyPressScript is defined.", keyResultsAreKeycodes: "If true, interpret integer results as key codes.", keySound: "A sound frame that is played when a key is pressed."}}clGaugeView{viewClass: 92,  gaugeDrawLimits: TRUE,  maxValue: 100,  minValue: 0,  viewFlags: 513,  viewValue: 50,  __ntRequired: {viewBounds: "RECT", viewFlags: "NUMB", viewFormat: "NUMB", viewValue: "NUMB"},  __ntOptional: {gaugeDrawLimits: "BOOL", maxValue: "NUMB", minValue: "NUMB"},  __ntHelp: {gaugeDrawLimits: "Controls the display of the gray background.", maxValue: "The maximum value to display.", minValue: "The minimum value to display.", viewValue: "This is the value to display."}}