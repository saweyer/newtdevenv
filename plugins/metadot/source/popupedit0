func(unit)if prefsCurrent.smartEditthen begin	local INT x1 := GetPoint(firstX,unit);	local INT y1 := GetPoint(firstY,unit);	local se := :PointToWord(x1, y1), str, ch, info, lineEnd, pos, sym;	local INT slen, first, last;//Print(se);	if se and (last := se.endChar) < (slen := StrLen(text))	then begin		first := se.startChar;		str := SubStr(text, first, last - first);		sym := Intern(str);		lineEnd := CharPos(text, $\n, last);//Print(str);		if (ch := text[last]) = $:		then begin // slot?			if info := HelpStr.slotHelp.(sym)			then begin				pos := CharPos(text, $,, last); // end of val?				pos :=					if pos					then if lineEnd						then min(pos,lineEnd)						else pos					else lineEnd;				self.replaceStuff := [str, last+1, lineEnd, $ , ",\n"];				end;			end		else if ch = $(		then begin	// method or function			info := if first > 0 and text[first-1] = $:				then HelpStr.methHelp.(sym)				else HelpStr.funcHelp.(sym);			if info			then begin				pos := CharPos(text, $), last);	// end of expr?				pos :=					if pos					then if lineEnd						then min(pos,lineEnd)						else pos					else lineEnd;				self.replaceStuff := [str, last+1, pos, nil, if pos=lineEnd then ");\n" else $)];				end;			end		else if ch = $,		then begin	// arg (like protoApp?)			if info := HelpStr.protHelp.(sym)			then begin				info := ArrayMunger(Clone(info), Length(info), 0, HelpStr.viewHelp, 0, nil);				self.replaceStuff := [str, last+1, lineEnd, "\n", ": ,\n"];				end			end;		if info		then begin//Print(info); Print(replaceStuff);			self.replaceOptions := if isArray(info) then info else [info];			local gb := :GlobalBox();			local pp := :PopupMenu(replaceOptions, {left: x1 - gb.left, top: y1 - gb.top});			pp.pickMaxWidth := GetAppParams().appAreaWidth-10;			pp:?SyncView();			SetKeyView(self, :PointToCharOffset(x1,y1));			end;		end;	NIL;	end