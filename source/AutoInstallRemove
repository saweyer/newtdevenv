// AutoInstallRemove// standard for most Newt autopart plugins// except: NewtDraw, protNOS1, Sloup ??/* "Project Data" precedes this and defines:kAutoCnstkVersionNumkVersionIntkFile4kBetaVersionkSlotSymbolkConstantSymbolkPartDataSymbol*/if not IsGlobalConstant('kBuild20)then DefineGlobalConstant('kBuild20,	// '|Newton 2.0| or '|Newton 2.1|		BeginsWith(SprintObject(platformVersion.platformFile), "Newton"));if not IsGlobalConstant('kBuild1x)then DefineGlobalConstant('kBuild1x, not kBuild20);DefineGlobalConstant('kVersionString,	kVersionNum & kBetaVersion &	(if kDebugOn then $D) &	(if kProfileOn then $P) &	(if not kIgnoreNativeKeyword then $N) &	(if kDemoVersion then $X) &	(if kBuild20 then "-2"));DefineGlobalConstant('kVersion, kAutoCnst && kVersionString);Print(kFile4 & kVersionInt & kBetaVersion &	(if not kIgnoreNativeKeyword then $N	else if kBuild20	then if language='English		then $2		else Upcase(SPrintObject(language))[0]	)	& ".pkg");Print(kVersion && DateNTime(time()));if not IsGlobalConstant('kNewtSymbol) thenDefineGlobalConstant('kNewtSymbol, '|NewtDevEnv:TKnollSys|);constant kInstalled		:= 'installed;DefineGlobalConstant('kPkgSymbol,	Intern(kPackageName)); // kAppSymbol='autoPrint(kPkgSymbol);DeclareGlobalFn('DeclareGlobalFn,2);if kBuild1xthen begin	DeclareGlobalFn('GetGlobalVar,1);	DeclareGlobalFn('DefGlobalVar,2);	end;DefineGlobalConstant('kRegExpMin, 5*1440);	// number of mins to expire in (5 days)DefineGlobalConstant('kRegTag, "NG:SK"); 	// this is the app-specific ID for this "lock" DefineGlobalConstant('kRegIspec, {	type: 'index,	IndexPath: 'tag,	startKey: kRegTag,	endTest: func(e) NOT StrEqual(e.tag,kRegTag),});DefineGlobalConstant('kRegExpired, func()begin	//	true - demo has expired	//	nil - full demo or non-demo build.	local prefSoup := GetStores()[0]:GetSoup(ROM_systemSoupName);	local cursor :=		if kBuild20		then prefSoup:Query(kRegIspec)		else Query(prefSoup, kRegIspec);	local prefsEntry := cursor:entry();	prefsEntry and		StrEqual(prefsEntry.tag, kRegTag) and		EntryModTime(prefsEntry) + kRegExpMin < Time()end);if kDemoVersionthen SetPartFrameSlot('DoNotInstall, kRegExpired);DefineGlobalConstant('kEmptyGlobal, {	constants: {}, libraries: {}, protos: {},	tools: {}, views: {}, installed: {},});InstallScript := func(partFrame, removeFrame)if not (kDemoVersion and call kRegExpired with ())then begin	local gData;	if kBuild1x and Functions.GetGlobals exists	then begin		gData := GetGlobals().(kNewtSymbol);		if not gData		then GetGlobals().(EnsureInternal(kNewtSymbol)) := gData := EnsureInternal(kEmptyGlobal);		end	else begin		gData := GetGlobalVar(kNewtSymbol);		if not gData		then DefGlobalVar(EnsureInternal(kNewtSymbol), gData := EnsureInternal(kEmptyGlobal));		end;//Print(kVersion);	gData.(kSlotSymbol).(EnsureInternal(kConstantSymbol)) :=		if kpartDataSymbol		then partFrame.partData.(kpartDataSymbol)		else partFrame.partData;	gData.(kInstalled).(EnsureInternal(kPkgSymbol))		  := kVersion;	end;RemoveScript := func(removeFrame)begin	local gData :=		if kBuild1x and Functions.GetGlobals exists		then GetGlobals().(kNewtSymbol)		else GetGlobalVar(kNewtSymbol);	if gData	then begin		RemoveSlot(gData.(kSlotSymbol), kConstantSymbol);		RemoveSlot(gData.(kInstalled),  kPkgSymbol);		end;end;