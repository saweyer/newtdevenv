DefineGlobalConstant('kMethDefs, ["Abort",					"/*1.x*/","Abstract",					"/*2.x*/item,bounds",		//non-nil or nil	overview"Accept",					"/*2.x*/options,cbSpec",	// endpoint//"ActiveTopic",			kArgIndex,			//nil list"Add",						"/*1.x:AddXmit*/entry",	//	Soup"AddAlarm",					"/*1.x.PF*/alarmKey,time,notifyArgs,cbFn,cbParams", 	// alarmKey. platform func for 1.x"AddAction",				"/*2.x*/title,cbFn,cbParams",	//notifyIcon"AddAppointment",			"/*2.x*/text,date,mtgDuration,repeatPeriod,repeatInfo",	//calendar"AddAuxButton",				"/*2.x*/buttonFrame",			//sent when new button registered for your applicationapp//"AddBookmark",			"pageNum",			//book"AddCard",					"/*2.x*/dataDefType,entryFrame",	// cardfile"AddCardData",				"/*2.x*/entry,layoutSym, newData",	//cardfile//"AddEmptyTopic",			"index,level",						//nil list"AddEntry",					"/*2.x*/entry,store",				//newtSoup"AddEntryFromStationery",	"/*2.x*/stationerySym",			//newtApplication"AddEvent",					"/*2.x*/text,date,repeatPeriod,repeatInfo",	//calendar"AddExpandWord",			"/*2.x*/word,expandedWord",	//reviewDict"AddExtraIcon",				"/*2.x.PF*/iconType,paramFrame,pkgName,store", //platform function"AddFlushedXmit",			"/*2.x*/frameEntry,changeSym",	//newly added entrysoup|usoup"AddIndex",					"/*1.x:AddIndexXmit*/indexSpec",		//soup|usoup"AddIndexXmit",				"/*2.x*/indexDesc,changeSym",	//soup|usoup//"AddItem",				kArgItem,					//add item to iobox soupioBox"AddKeyCommand",			"/*2.1*/keyCmd",			//view 2.1"AddKeyCommands",			"/*2.1*/keyCmds",			//view 2.1"AddLayout",				"/*2.x*/layout",			//cardfile"AddLocale",				"/*PF*/localeBundle",		// platform func"AddShape",					"/*2.1*/shape,style,nil",	//canvas  newtworks 2.1"AddShapeToSelection",		"/*2.1*/shape",				//canvas  newtworks 2.1"AddTags",					"/*1.x:AddTagsXmit*/tags",//Soup"AddTagsXmit",				"/*2.x*/tags,changeSym",	//soup|usoup"AddText",					"/*2.x*/str",				//transportheader"AddToDefaultStore",		"/*1.x:AddToDefaultStoreXmit*/frame",	// usoup"AddToDefaultStoreXmit",	"/*2.x*/entry,changeSym",	//usoup"AddToStoreFlushedXmit",	"/*2.x*/frameOrEntry,store,changeSym",	//new entryusoup"AddToStoreXmit",			"/*2.x*/frame,store,changeSym",	//new entryusoup"AddUndoAction",			"/*2.x*/methodSym,params",	//unspecified view"AddUnit",					"/*2.x*/view,start,stop,unit",		//correctInfo"AddWithUniqueID",			"/*1.x:AddWithUniqueIdXmit*/frame",	// Soup"AddWithUniqueIDXmit",		"/*2.x*/entry,changeSym",	//Soup"AddWord",					"/*2.x*/word",				//correctInfo,reviewDict"AddXmit",					"/*2.x*/entry,changeSym",	//Soup"AdoptEntry",				"/*2.x*/entry,type",		//newtSoup"AdoptEntryFromStationery",	"/*2.x*/entry,stationerySym,store",	//NewtApplication"AdoptSoupEntryFromStationery",	"/*2.x*/entry,stationerySym,store,soup",	//NewtApplication"Affirmative",				"/*2.x*/",					//popup"AtomicAction",				"/*2.x*/myAction",			//store//"AuthorData",				kArg0,						//book"AutoAdd",					"/*2.x*/",					//wordInfo"AutoPutAway",				"/*2.x*/item",				//value or nil app"AutoRemove",				"/*2.x*/",					//wordInfo"BcCreditCards",			"/*2.x*/entry,which",		//cardfile"BcCustomFields",			"/*2.x*/entry,which",		//cardfile"BcEmailAddress",			"/*2.x*/entry,which",		//cardfile"BcEmailNetwork",			"/*2.x*/entry,type",		//cardfile"BcPhoneNumber",			"/*2.x*/entry,which",		//cardfile//"bcFullName",				"nameFrame",				//full name stringview//"BeginBoxIO",				"box",						//lock system for ioioBox"Bind",						"/*2.x*/options,cbSpec",	// endpoint"BlessApp",					"/*2.x*/appSym",			//root"BlockKeyCommand",			"/*2.1*/keyMsgSym",			//view 2.1//"BookData",				kArg0,						//book//"Bookmarks",				kArg0,						//book//"BookTitle",				kArg0,						//book"BottomOfSlip",				"/*2.x*/",					//routingSlip"BuildText",				"/*2.x*/",					//transportheader"BusyAction",				"/*2.x*/appSym,appName,myAction",	//myAction result store"ButtonClickScript",		kArg0,"ButtonPressedScript",		kArg0,"ButtonToggleScript",		"/*2.x*/frontmostApp",		//view//"BytesAvailable",			kArg0,						//number of bytes on desktop waiting to be read endpoint//"CalcLevel",				kArgNum,					//integer list"Callback",					"/*2.x*/state,result",		//sound"Cancel",					"/*2.x*/cbSpec",		//endpoint"CancelRequest",			"/*2.x*/reason",			//myAppBaseOrMyStatusSlip, transport"CanPutAway",				"/*2.x*/item",				//transport"CanScroll",				"/*2.x*/",					//frame imageView"CanZoomBy",				"/*2.x*/dir",			//non-nil or nil imageView"CardFileSafeRemoveLayout",	"/*2.x.PF*/layout",		// platform func"ChainIn",					"/*2.x*/appSym",			//NewtApplication"ChainOut",					"/*2.x*/appSym",			//NewtApplication//"ChangedSlider",			kArg0,						//slider//"ChangePopup",				"/*2.x*/item,entry",		// newtProtoLine"ChangeRangeRulers",		"/*2.1*/range,ruler,undoable",	//TXView"ChangeRangeRuns",			"/*2.1*/range,fontSpec,toggleFace,undoable",	//TXView"CharToPoint",				"/*2.1*/offset",			//point frameTXView"CheckOutbox",				"/*2.x*/",					//transport"CheckState",				"/*2.x*/entry",				//overview"CheckWriteProtect",		kArg0,						//nil or exception thrown store"ChildViewFrames",			kArg0,						//view"CleanupString",			"/*2.x*/str",				//charEditTemplate"Clear",					"/*2.x*/view,offset,len",	// correctInfo//"Clear",					"/*2.1*/",					//TXView ??"ClearKeyCommands",			"/*2.1*/",					//view 2.1"ClearSelection",			"/*2.x*/",					//canvas"ClearSelectionHilites",	"/*PF*/view",				// platform func//"Click",					kArgItem,					//user clicked on iobox itemcategory//"ClickBounds",			kArgIndex,					//hit target rectangle list"ClickDone",				kArg0,						//picker 1.x?"Clone",					kArg0,						//cursor"Close",					kArg0,						//view"CloseRemoteControl",		"/*1.x.PF*/conn",			// platform func 1.x"CloseStatusDialog",		"/*2.x*/fromUser",			//transport//"ClusterChanged",			kArg0,						//cluster//"CollapseTopic",			"anIndex",					//nil list"Confirm",					"/*1.x*/titleStr,msg,methodV,method",	//rootView//"Connect",				"using,options,password",	//nil or error-code endpoint"Connect",					if kBuild1x							then "/*1.x*/address,options"							else "/*2.x*/options,cbSpec",	//endpoint//"ConnectionDone",			"error-code",				//endpoint"ContinueSend",				"/*2.x*/when",				//routingSlip"ConvertToSoupEntry",		"/*2.x*/item",				//compatibleFinder"Copy",						"/*2.1*/",					//TXView"CopyBits",					"picture,x,y,mode",			//view"CopyEntries",				"/*1.x:CopyEntriesXmit*/destSoup",	//Soup"CopyEntriesXmit",			"/*2.x*/destSoup,changeSym",//Soup"Count",					"/*2.x*/",					//compatibleFinder,"CountEntries",				"/*2.x*/",					//number of entries cursor//"CountPages",				kArg0,	//book"CreateSoup",				"/*1.x.CreateSoupFromSoupDef*/soupName,indexArray",	//store"CreateSoupXmit",			"/*2.x*/name,indexes,changeSym",	//store"CreateToDoItem",			"/*2.x*/date,richStr,reminder,freq",	//toDoFrame"CreateToDoItemAll",		"/*2.x*/date,richStr,reminder,freq,priority,completed",	//toDoFrame//"CurrentPage",			kArg0,	//book"CurrentPassword",			"/*2.1*/",	// passwordslip 2.1"CurrentWord",				"/*2.x*/",					//charEditView"Cut",						"/*2.1*/",					//TXView"DefaultOpenEditor",		"/*2.x*/tapInfo,context,why", //dataDef"Delete",					"methodSym,methodParams",	//view"DeleteAppointment",		"/*2.x*/textOrFrame,date,delete1",	//calendar"DeleteEntry",				"/*2.x*/entry",				//myNewtSoup"DeleteEvent",				"/*2.x*/textOrFrame,date,delete1",	//calendar"DeleteItem",				"/*2.x*/category,item",		//delete iobox item ioBox 2.1?"DeleteRemoteItems",		"/*2.x*/",					//transport 2.1?"DeleteRepeatingEntry",		"/*2.x*/textOrFrame,date,delete1",	//calendar"DeleteText",				"/*2.x*/left,rt",		//charEditView//"DeleteTopics",			"list",						//nil list//"DesktopType",			kArg0,						//desktop type associated with current connection endpoint"Dial",						"numStr,where",				//rootView"Dirty",					kArg0,						//view//"DirtyBelow",				kArgIndex,					//nil list"DirtyBox",					"/*2.x*/bounds",			//true view"DirtyShape",				"/*2.1*/shape",				//canvas 2.1"Disconnect",				if kBuild1x							then "/*1.x*/"							else "/*2.x*/cancelPending,cbSpec",	//endpoint"DisplayDate",				"/*2.x*/date,format",		//calendar"Dispose",					kArg0,						//nil endpoint//"DoConnection",			"removeDuplicates,syncOptions",	//boolean endpoint"DoDrawing",				"drawMethodSym,params",		//view"DoInfoAbout",				"/*2.x*/",					//infoButton//"DoInfoAux",				"/*2.x*/auxItems,itemNum",	//infoButton//"DoInfoHelp",				"/*2.x*/",					//infoButton//"DoInfoPrefs",				"/*2.x*/",					//infoButton"DoneScrolling",			"/*2.x*/",					//thumbnail"DoneWithSoup",				"/*2.x*/appSym",			//myNewtSoup"DoneYear",					"/*2.x*/year",				//callbackContext"DoScrollScript",			"offset",					//protoTextList"DownUpKeyCodes",			"/*2.x.PF*/keyCodeOrArray",	// platform func"Drag",						"unit,dragBounds",			//view"DragAndDrop",				"/*2.x*/unit,bounds,copy,dragInfo",	//view"DragAndDropLtd",			"/*2.x.PF?*/unit,bounds,limitBounds,copy,dragInfo",	// Misc. Toolbox. new platform func?"DrawShape",				"shape,styleFrame",			//view"DuplicateEntry",			"/*2.x*/entry,store",		//myNewtSoup"EditCopy",					"/*2.1*/",					//canvas 2.1"EditCut",					"/*2.1*/",					//canvas 2.1"EditDelete",				"/*2.1*/",					//canvas 2.1"EditDuplicate",			"/*2.1*/",					//canvas 2.1"EditGroup",				"/*2.1*/",					//canvas 2.1"EditPaste",				"/*2.1*/",					//canvas 2.1"EditUndo",					"/*2.1*/",					//canvas 2.1"EditUnGroup",				"/*2.1*/",					//canvas 2.1"Effect",					"effect,offScreen,sound,methodName,methodParams",	//view"EnableIRModule",			"/*1.x.PF*/enable",			// platform func//"EndBoxIO",				"box",						//unlock system for ioioBox"EnsureVisibleTopic",		"/*2.x*/index",				//nil list"Entry",					kArg0,						//entry, nil, or 'deleted cursor"EntryAcess",				"/*2.x*/mockEntry",			//entry handler handler//"EntryChange",			kArgMock,					//nil handler//"EntryChangeVerbatim",	kArgMock,					//handler//"EntryChangeWithModTime",	kArgMock,				//handler"EntryCool",				"/*2.x*/report",			//myEntryView//"EntryCopy",				"mockEntry,newSoup",		//new entry handler"EntryKey",					kArg0,						//cursor//"EntryModTime",			kArgMock,					//time as integer handler//"EntryMove",				"mockEntry,newSoup",		//nil handler//"EntryRemoveFromSoup",	kArgMock,					//nil handler//"EntryReplace",			"original,replacement",		//nil handler//"EntryReplaceWithModTime","original,replacement",	// handler//"EntrySize",				kArgMock,					//number of bytes handler//"EntrySoup",				kArgMock,					//soup containing entry handler//"EntryStore",				kArgMock,					//store containing entry handler//"EntryTextSize",			kArgMock,					//number of bytes handler//"EntryUndoChanges",		kArgMock,					//nil handler//"EntryUniqueID",			kArgMock,					//entry's unique id handler//"EntryValid",				kArgMock,					// handler"Equivalent",				"/*2.x*/nameRef1,nameRef2,pathArray",	//dataDef"Erase",					kArg0,						//store//"ExceptionHandler",		"error",					//nil endpoint//"ExpandTopic",			kArgIndex,					//nil list"Externalize",				"/*2.1*/",					// reference to the object that was created TXView"Extract",					"/*2.x*/view,start,stop",	//correctInfo"ExtractRangeAsRichString",	"/*2.x*/offset,len",	//a rich string for the range of text specified from a paragraph view view//"FileAs",					"label",					//file found items in new labelfindProto"FillNewEntry",				"/*2.x*/newEntry",			//myDataDef//"FindContentBySlot",		"sym,depth",				//book//"FindContentByValue",		"sym,val,depth",			//book//"FindPageByContent",		"content,nil",				//book//"FindPageByValue",		"sym,val,depth",			//book"FilterDialog",				"/*2.x*/",					//view"Find",						"/*2.x*/view,offset",		//protocorrectInfo"FindAppointment",			"/*2.x*/text,findWords,dateRange,type,maxNum",	//calendar"FindExactlyOneAppointment","/*2.x*/text,findWords,dateRange,type",	//calendar"FindLocale",				"/*PF*/locSym",				// platform function"FindNew",					"/*2.x*/view,offset,len",	//correctInfo"FindNextMeeting",			"/*2.x*/date",				//calendar"FindString",				"/*2.1*/str,start,options",	//offset or nil TXView//"FindString(obj, str, start, options) 				//protoTXViewFinder//"Flush",					kArg0,						//soup|usoup ??"FlushData",				"/*2.x*/",					//newtLayout"FlushInput",				kArg0,						//nil or error-code endpoint"FlushOutput",				"/*1.x*/",					//nil or error-code endpoint 2.x?"FlushPartial",				kArg0,						//nil or error-code endpoint"FlushUserConfig",			"/*1.x.PF*/",				// platform func"ForEachSelected",			"/*2.x*/fn",				// overview"GenInfoAuxItems",			"/*2.x*/",					//an array of items infoButton"GenSoupName",				"/*2.1*/soupName,curUser",	//returns string for user's soupname homePage 2.1"Get",						"/*2.x*/obj,fieldPath,format",	//value from the specified object, retrieved from the column specificationdataDef"GetAccessNumbers",			"/*2.x*/worksite,city",	//networkFrame"GetActiveView",			"/*2.x*/",					//view to which this message is sent view"GetAlarm",					"/*1.x.PF*/alarmKey",		// platform func 1.x"GetAlias",					"/*2.x*/entry",				//myNewtSoup"GetAllFonts",				"/*2.x.PF*/",				// platform func"GetAllInfo",				kArg0,						//info frame store|soup"GetAnnotationMode",		"/*2.x*/",					//mode imageView"GetAnnotations",			"/*2.x*/",					//array of views imageView"GetAppAlarmKeys",			"/*1.x.PF*/alarmKeySuffix",	// platform func 1.x"GetAppPreferences",		"/*2.x*/",					//myNewtApplication"GetAppState",				"/*2.x*/",					//myNewtApplication"GetArrow",					"/*2.x*/dir",			//scroller"GetCalendarMeetingTypes",	"/*2.x.PF*/",	 			//platform function"GetCalendarMeetingTypeInfo",	"/*2.x.PF*/sym",		//platform function"GetCanvas",				"/*2.1*/",					//viewDefView. 2.1"GetCommPortInfo",			"/*2.x.PF*/",				//platform function"GetConfig",				"/*2.x*/prefName",			//transport"GetContents",				"/*2.1*/",					//shapes. 2.1"GetContinuousRun",			"/*2.1*/",					//style run frame TXView"GetCorrectInfo",			"/*2.x.PF*/",					// platform func"GetCountCharacters",		"/*2.1*/",					//total number of characters TXView|TXViewFinder"GetCountPages",			"/*2.1*/",					//number of pages TXView//"GetCurrentStore",		kArg0,						//store or nil endpoint"GetCursor",				"/*2.x*/",					//myNewtSoup"GetCursorFormat",			"/*2.x*/target",			//format"GetCursorPosition",		"/*2.x*/",					//myNewtSoup"GetDefaultFormat",			"/*2.x*/transportSym,target",	//app"GetDefaultOwnerStore",		"/*2.x*/",					//transport"GetDefaultState",			"/*2.x*/",					//myNewtApplication"GetDefaultStore",			"/*1.x.PF*/",				// platform func 1.x"GetDrawBox",				"/*2.x*/",					//bounds of dirty area view"GetExpandedWord",			"/*2.x*/word",				//reviewDict"GetExtraIcons",			"/*2.x*/iconType,pkgName,store",	//extrasDrawer"GetFolderName",			"/*2.x*/item",				//the name of the folder where an item should be filedtransport"GetHiliteRange",			"/*2.1*/",					//range frameTXView"GetIndexes",				kArg0,						//array of indexSpecsSoup"GetIndexesModTime",		"/*2.x*/",					//time when the soup indexes were last changed Soup"GetInfo",					kArgSym,					//value store|soup"GetInfoModTime",			"/*2.x*/",					//time when the soup info was last changed Soup"GetInputGain",				"/*2.x*/",					//Returns current input gain for channel protoSoundChannel"GetItemMark",				kArgIndex,					//picker??"GetItemStateString",		"/*2.x*/item",				//transport"GetItemTitle",				"/*2.x*/item",				//transport"GetKind",					"/*1.x*/",					//"Internal","Storage card","Flash storage card","Application card" store"GetLanguageEnvironment",	"/*PF*/",					//integer code. platform func"GetLineRange",				"/*2.1*/offset",			//range frameTXView"GetMaskedPixel",			"/*2.1.PF*/x,y,pixFamily",	// platform func 2.1 (2.1 docs)"GetMeetingIconType",		"/*2.x*/textOrFrame,date",	//calendar"GetMeetingInvitees",		"/*2.x*/text,date",			//calendar"GetMeetingLocation",		"/*2.x*/text,date",			//calendar"GetMeetingNotes",			"/*2.x*/text,date",			//calendar"GetMember",				"/*2.x*/store",				//single soupusoup"GetName",					kArg0,						//name string store|soup|usoup"GetNameText",				"/*2.x*/nameRef,len,font",	//transport"GetNewtWorksTool",			"/*2.1*/sym",				// 2.1"GetNewtWorksTools",		"/*2.1*/dataTypeSym",		// 2.1"GetNextUID",				kArg0,						//Soup"GetOptions",				"/*1.x*/options",			//option frame or nilendpoint"GetPartCursor",			"/*2.x.PF*/pkgName,store,labels",	//platform function. returns part cursor with packages extrasDrawer "GetPartEntries",			"/*2.1*/",					//buttonBar 2.1"GetPartEntryData",			"/*2.x.PF*/pkgEntry",		//platform function returns part entry data extrasDrawer"GetPlayingTime",			"/*2.x*/",					//Returns duration of sample in seconds as a float soundFrame"GetPrimaryValue",			"/*2.x*/obj,format",		//value from the specified object, retrieved from the column specification dataDef"GetPrinterName",			"/*PF*/printerFrame", 		//platform function"GetRangeData",				"/*2.1*/range,which",		//range data TXView 2.1"GetRangeText",				"/*2.1*/range",				//string TXViewFinder"GetRepeatSpec",			"/*2.x*/",					//protoRepeatView"GetRichString",			"/*2.x*/",					//a rich string view"GetRouteScripts",			"/*2.x*/",					//value of routeScripts slot view"GetSampleCount",			"/*2.x*/",					//Returns number of samples soundFrame"GetSampleSize",			"/*2.x*/",					//Returns size of sample soundFrame"GetSamplingRate",			"/*2.x*/",					//Returns sampling rate... really soundFrame"GetScalingInfo",			"/*2.x*/",					//scaling info frame thumbnail|imageView"GetSCCSideB",				"/*1.x.PF*/",				// platform func 1.x?"GetScrollableRect",		"/*2.1*/",					//scrollable area TXView"GetScrollValues",			"/*2.1*/",					//current scroll values TXView"GetSelected",				"/*2.x*/active",			//picker"GetSelectedDates",			"/*2.x*/",					//calendar"GetSelectedShapes",		"/*2.1*/makeCopy",			//canvas newtworks 2.1"GetSignature",				kArg0,						//signature store|soup"GetSize",					"/*2.x*/",					//size of the soup in bytes soup|usoup"GetSounds",				"/*2.1*/",					// recorderview 2.1 ?"GetSoup",					kArgSoupN,					//soup store"GetSoupList",				"/*2.x*/",					//uSoup"GetSoupNames",				kArg0,						//array of nameString sstore//"GetState",				kArg0,						//frame endpoint"GetStatusString",			"/*2.x*/",					//transport"GetStore",					kArg0,						//store Soup//"GetSyncChanges",			kArg0,						//frame containing associated data endpoint"GetTags",					"/*2.x*/",					//array of soup tags or nil soup|usoup"GetTargetInfo",			"/*2.x*/reason",			//target info frame view"GetToDoEntry",				"/*2.x*/date,makeNewEntry",	//toDoFrame"GetToDoItemsForRange",		"/*2.x*/beginDate,endDate",	//toDoFrame"GetToDoItemsForThisDate",	"/*2.x*/date",				//toDoFrame//"GetTopicCount",			kArg0,						//the number of topics in a list list"GetTotalHeight",			"/*2.1*/",					//current total text height TXView"GetTotalWidth",			"/*2.1*/",					//current total text width TXView"GetUserConfig",			"/*1.x.PF*/configSym",		// platform func 1.x"GetVolume",				kArg0,						// soundchannel"GetWordForDisplay",		"/*2.x*/",					//charEditView"GetWordRange",				"/*2.1*/offset",			//range frameTXView"GetWords",					"/*2.x*/",					//wordInfo"GlobalBox",				kArg0,						//view"GlobalOuterBox",			"/*2.x*/",					//viewbounds frame or nil view"Goto",						kArgEntry,					//true or nil cursor"GotoAlias",				"/*2.x*/alias",				//myNewtSoup"GotoKey",					"key",						//entry or nil cursor"GrayShrink",				"/*2.1*/bitmap,style",		//returns anti-aliased shrunk bitmap view. Misc Toolbox//"HandleCheck",			"index,topic",				//nil list"HandleInkWord",			"/*2.x*/stroke",			//true or nil view"HandleInsertItems",		"/*2.x*/insertSpec",		//nil view//"HandlePriority",			"index,topic",				//nil list"HandleRawInk",				"/*2.x*/stroke",			//true or nil view//"HandleScrub",			kArgBnds,					//true or nil list"HasAnnotations",			"/*2.x*/",					//non-nil or nil imageView//"HasKids",				kArgIndex,					//true or nil list"HasSoup",					kArgSoupN,					//true or nil store"HasTags",					"/*2.x*/",					//true or nil soup|usoup"Hide",						kArg0,						//view"HideRuler",				"/*2.1*/",					//TXView//"HideStoryCard",			kArg0,						//book"Hilite",					"on",						//view//"HiliteBlock",			"content,offset,len",		//book"HiliteUnique",				"on",						//view"HitItem",					"/*2.x*/index,x,y",			//non-nil or nil overview|overLayout"IconCapacity",				"/*2.1*/",					//buttonBar 2.1//"IdleConnection",			kArg0,						//new idle time endpoint"IndexClickScript",			kArgIndex,					//picker//"IndexSizes",				kArg0,						//Soup"InfoChanged",				"/*2.x*/changed",			//context for transportHeader"InitClusterValue",			"buttonVal",				//cluster"Input",					kArg0,						//input or nil endpoint//"InputAvailable",			kArg0,						//true or nilendpoint//"InputScript",			kArg0,						//nil endpoint//"InputScript",			"endpoint,data,terminator,options",	//inputSpec"Insert",					"/*2.x*/srcCorrectInfo,destV",	//destCorrectInfo//"InsertForm",				"form",						//book"InsertPageBreak",			"/*2.1*/range",				//TXView//"InstallProtocolExtension",	"cmd,fn",			//endpoint"Instantiate",				"endpoint,options",			//nil or error-code endpoint"Internalize",				"/*2.1*/obj",				//TXView"InvertRect",				"/*2.x*/left,top,rt,bot",		//view"IsActive",					"/*2.x*/",					// protosoundchannel//"IsCollapsed",			kArgIndex,					//true if the topic is collapsed list//"IsDoubleClick",			kArg0,						//true if double clickview//"IsEmpty",				"topicIndex",				//true or nil list"IsInItem",					"/*2.x*/item",				//transport"IsLogItem",				"/*2.x*/item",				//transport"IsModified",				"/*2.1*/",					//non-nil or nil TXView"IsOpen",					"/*2.x*/",					// soundchannel"IsPaused",					"/*2.x*/",					//soundChannel"IsReadOnly",				kArg0,						//store"IsRulerShown",				"/*2.1*/",					//non-nil or nil TXView"IsSelected",				"/*2.x*/item",				//overview"IsValid",					"/*2.x*/",					//soup, store//"ItemCompleted",			kArgItem,					//remove item from iobox ioBox"ItemCompleted",			"/*2.x*/item,state,error",	//transport"ItemRequest",				"/*2.x*/request",			//transport"ItemToText",				"/*2.1?PF*/item,target,transportSym,isText,noDefaultInkConvert",	// platform func 2.1?"JamFromEntry",				"/*2.x*/otherEntry",		//newtEntryView"JamIt",					"/*2.x*/",					//myEmporiumPopup, personapopup//"JustifiedBounds",		kArg0,						//bounds frame view"KeyboardInput",			kArg0,						//true or nil view"KillAction",				"/*2.x*/",					//notifyIcon"LastVisibleTopic",			"/*2.x*/",					//toDoFrame"LaunchPartEntry",			"/*2.x.PF*/entry",			//"tap" the pkg icon extrasDrawer. platform func"LayoutColumn",				"childVs,index",			//view"LayoutTable",				"tableDef,columnStart,rowStart",	//view//"ListBottom",				kArg0,	//the lowest coordinate in the list, depending on the current state of expansionlist"Listen",					if kBuild1x							then "/*1.x*/options"							else "/*2.x*/options,cbSpec",		//endpoint"LocalBox",					kArg0,						//view//"LocalOuterBox",			kArg0,						//viewbounds frame or nil view//"Lock",					kArg0,						//true if locked, nil if not store"LockScreen",				"lock",						//view"MakeCanonicalNameRef",		"/*2.x*/obj,dataClass",		//name reference dataDef"MakeKey",					"/*2.x*/str,indexPath",		//index keySoup"MakeNameRef",				"/*2.x*/obj,dataClass",		//name reference dataDef"MakePopup",				"/*2.x*/obj,fieldPath",		//nil or PopupMenu array dataDef"MakeTextNote",				"/*2.x*/str,addIt",			//paperroll//"MakeTopicFrame",			"level",	//a new frame with the default settings taken from listViewFlags list//"MarkerBounds",			"topic",	//a bounds frame for the topic marker list"MatchPassword",			"/*2.1*/newpw,curpw",		// passwordslip 2.1"MissingImports",			"/*2.x.PF*/pkgRef",			// platform func"ModalDialog",				kArg0,						//view"ModifyEntry",				"/*2.x*/nameRef,label",		//modified entry dataDef"ModifyEntryPath",			"/*2.x*/nameRef,entry,path",	//dataDef"ModifyTag",				"/*1.x:ModifyTagXmit*/oldTag,newTag",	//nil Soup"ModifyTagXmit",			"/*2.x*/oldTag,newTag,changeSym",	//soup|usoup//"Mother",					kArgIndex,					//parent index or nil list"Move",						kArgNum,					//entry or nil cursor"MoveAppointment",			"/*2.x*/text,date,newStartDate,newDuration",	//calendar"MoveBehind",				"/*2.x*/view",	//result undefined view"MoveOnlyOneAppointment",	"/*2.x*/text,date,newStartDate,newDuration",	//calendar"MoveTarget",				"/*2.x*/target,newStore",	//view//"MoveTo",					kArgStore,					//move found items to new store findProto"MultiUserSwitch",			"/*2.1*/appSym",			//You call when current user changes homePage 2.1"MungePhone",				"inNum,country",			//rootView"NetworkChooserDone",		"curSelection,curZone",		//NetChooser"New",						"/*2.x*/tapInfo,context",	//view or nil dataDef"NewCity",					"/*2.x*/newCity,workSite,MakeHome",	//worldClock"NewCompressedVBO",			"/*2.x*/class,sz,companderName,companderArgs",	//reference to created object store"NewEntry",					"/*2.x*/nameRef,label",		//new entrydataDef"NewInputBlock",			"/*2.x*/cbFn",				//returns sound object for recording into protoSoundChannel//"NewMsg",					kArgItem,					//send/recieve item in iobox category"NewNote",					"/*2.x*/note,goto,store",	//paperroll//"NewPackage",				"endPoint,cbFn,cbFreq",	//store"NewRecording",				"/*2.x*/",					//Returns sound channel ready for recordingprotoSoundChannel//"NewRelative",			"relation",					//list"NewTarget",				"/*2.x*/",					//myLayout//"NewTopic",				"level,text",				//list"NewVBO",					"/*2.x*/class,sz",		//reference to created object store"Next",						kArg0,						//entry or nil cursor"NextToDoDate",				"/*2.x*/date",				//toDoFrame"NormalizeAddress",			"/*2.x*/nameFrame",			//transport"Notify",					"level,hdrStr,msgStr",		//view"Offset",					"/*2.x*/view,start,oldSz,newSz",	//correctInfo"OffsetView",				kArgdXdY,	//view  //"OlderSister",			kArgIndex,	//previous topic index or nillist//"OldestSister",			kArgIndex,	//oldest topic index or nillist"Open",						kArg0,		//view"OpenEditor",				"/*2.x*/tapInfo,context,why",	//dataDef"OpenImage",				"/*2.x*/image,annotations,scalingInfo",	//imageView"OpenMeetingSlip",			"/*2.x*/meetingFrame,date,openDefaultSlip",	//calendar"OpenNetChooser",			"zone,lookupName,startSel,who,connText,headerText,lookforText",	//NetChooser"OpenPlay",					"/*2.x*/soundArray",		//Open recording view with sounds for user soundRecorder"OpenRecord",				"/*2.x*/cbFn",				//Open recording view for user soundRecorder"OpenRemoteControl",		"/*1.x.PF*/",	 			//IRconnection. platform function"OpenThumbnail",			"/*2.x*/image",				//thumbnail"OpenTo",					"entry,nil",				//cardfile"Option",					"/*2.x*/options,cbSpec",	//endpoint"Output",					if kBuild1x							then "/*1.x*/data,flags"							else "/*2.x*/data,options,outputSpec",	//endpoint//"OutputDone",				kArg0,			//true or nil endpoint"OutputFrame",				"/*1.x*/data,flags",	//nil or error-code endpoint//"Overhead",				kArg0,			//store//"PackageAvailable",		"pssid",		//0 store//"PageThumbnail",			"page",			//book"Parent",					kArg0,			//view"Partial",					kArg0,			//input or nil endpoint"Paste",					"/*2.1*/",			//TXView"Pause",					"/*2.x*/",			//soundChannel"PenDown",					"/*2.x*/stroke",		//imageView//"pickActionScript",		kArgIndex,			//view//"pickCancelledScript",	kArg0,				//view"PointToChar",				"/*2.1*/point",		//range frame TXView"PointToCharOffset",		"/*2.x*/x,y",			//a character or nil view"PointToWord",				"/*2.x*/x,y",			//a frame view"PopIt",					"position",			//picker"PopupMenu",				"/*2.x*/pickItems,options",	//view"PositionCaret",			"/*2.x*/x,y,makeSound",//view//"PostItem",				kArgItem,		//add item to iobox soup ioBox//"PrepareToScroll",		kArg0,			//thumbnail"Prev",						kArg0,			//entry or nilcursor//"PreviousPage",			kArg0,			//book//"ProcessBuiltinCommand",	kArg0,		//endpoint"PtInBitMap",				"/*1.x.PF*/dx,dy,bitMap",	// platform func 1.x?//"PutAway",				kArgItem,		//add item.body to soup view|globalFn ??"Query",					"/*2.x*/querySpec",	//cursorsoup|usoup"QueueRequest",				"/*2.x*/doWhat,newRequest",	//transport"QuietSendAll",				"/*2.x.PF*/sym", 		// platform file function//"ReadBytes",				"numOfBytes",	//binary containing associated data endpoint//"ReadCommand",			kArg0,	//frame containing command and associated data endpoint//"ReadCommandData",		kArg0,	//frame containing command and associated data endpoint//"ReadCommandHeader",		kArg0,	//frame containing command and associated data endpoint//"ReadyForOutput",			kArgX,	//true or nil endpoint"Reconfigure",				"/*2.1*/newSetup",			//buttonBar 2.1"RedoChildren",				kArg0,						//view"Refresh",					"/*2.x*/",					//clock, etc."RefreshOwner",				"/*2.x*/",					//transport 2.1?"RegEmailSystem",			"/*2.x.PF*/classSym,name,internet", // platform function"RegFindApps",				"/*1.x.PF*/appSym",			// platform func 1.x?"RegFormulas",				"/*1.x.PF*/appSym,formulasTemplate",	// platform func 1.x?"RegGlobalKeyboard",		"/*2.x.PF*/kbdSym,kbdTemplate", // platform function"RegInfoItem",				"/*2.x*/sym,frame",	//calendar"RegisterCardSoup",			"/*1.x.PF.RegUnionSoup*/soupName,indexArray,appSym,appObj", // platform func"RegisterOpenKeyboard",		"/*2.x*/flags",	//view"RegLogin",					"/*2.x*/appSym,cbFn",	//sleepScreen"RegMeetingType",			"/*2.x*/sym,frame",			//calendar"RegNamesRouteScript",		"/*2.x.PF*/sym,frame", 		// platform function"RegNewtWorksTool",			"/*2.1*/sym,toolFrame",		// 2.1"RegPagerType",				"/*2.x.PF*/classSym,name", 	// platform function"RegPhoneType",				"/*2.x.PF*/classSym,name,char",	// platform function"RegPatterns",				"/*2.1*/sym,patterns",	//Registers patterns in the DrawApp drawAppViewDef 2.1"RegPrefs",					"/*1.x.PF*/appSym,prefsTemplate",	// platform function 1.x"RegStamps",				"/*2.1*/sym,stamps",		//Registers stamps in the DrawApp drawAppViewDef 2.1"RegTool",					"/*2.1*/sym,toolLayout",	//Registers tool in the DrawApp drawAppViewDef 2.1"Release",					"/*1.x*/",						//nil or error-code endpoint"RememberedClose",			"/*2.x*/view",				//calendar"RememberedOpen",			"/*2.x*/view",				//calendar"RemoveAlarm",				"/*1.x.PF*/alarmKey",		//nil if the alarm was not found, non-nil otherwise. (platform func 1.x)"RemoveAllEntries",			"/*1.x:RemoveAllEntriesXmit*/","RemoveAllEntriesXmit",		"/*2.x*/changeSym",	//Soup"RemoveAppAlarms",			"/*1.x.PF*/alarmKeySuffix",	// integer number of alarms removed. platform func 1.x"RemoveAuxButton",			"/*2.x*/buttonSym",			//sent when button unregistered for your application app"RemoveExtraIcon",			"/*2.x*/extraIcon",			//extrasDrawer"RemoveFromStore",			"/*1.x:RemoveFromStoreXmit*/","RemoveFromStoreXmit",		"/*2.x*/changeSym",			//Soup"RemoveIndex",				"/*1.x:RemoveIndexXmit*/indexPath",	//soup|usoup"RemoveIndexXmit",			"/*2.x*/indexPath,changeSym",	//soup|usoup"RemoveKeyCommandFrame",	"/*2.1*/keyCmdFrame",		//view 2.1"RemoveLocale",				"/*PF*/localeSym", 			// platform func"RemoveOldToDoItems",		"/*2.x*/beforeDate,removeWhich,nil",	//toDoFrame//"RemoveProtocolExtension","cmd",			//endpoint"RemoveTags",				"/*1.x:RemoveTagsXmit*/tags",	// Soup"RemoveTagsXmit",			"/*2.x*/tags,changeSym",		//soup|usoup"RemoveView",				kArgView,				//correctInfo"RemoveWord",				"/*2.x*/word",				//reviewDict//"ReorientToScreen",		kArg0,					//view"Replace",					"/*2.1*/range,data,undoable",	//TXView"ReplaceAll",				"/*2.1*/str,offset,options,data",	//number of replacements made TXView"ReplaceInkData",			"/*2.x*/entry,layoutSym,oldStr,checkPath,newStr",	//cardfile"Reset",					kArg0,					//entrycursor"ResetToEnd",				"/*2.x*/",				//cursor//"ResolveClick",			kArgXY,					//frame list"RestorePackage",			"/*1.x:SuckPackageFromBinary*/packageObj",	//store"ReSync",					"/*2.x*/",				//redisplay and reset found items findProto"Retarget",					"/*2.x*/",				//myEntryView//"RetryPassword",			"password",				//endpoint"RevealEffect",				"dist,bounds,sound,methodName,methodParams",	//view//"RevealTopic",			kArgIndex,				//list"SafeRemoveLayout",			"/*2.x.PF*/layout", 	// cardfile. platform function"SaveAppState",				"/*2.x*/",				//myNewtApplication"Schedule",					"/*2.x*/sound",			//Schedules soundFrame for playing or recording protoSoundChannel"Scroll",					"/*2.x*/val",			//charEditView. TXView (scrollvalues?)"ScrollCursor",				"/*2.x*/delta",			//myLayout"ScrollBy",					"/*2.x*/dx,dy",			//non-nil or nil imageView"Scroller",					"/*2.x*/delta",			//newLayout//"ScrollPage",				"delta",				//book"ScrollTo",					"/*2.x*/x,y",			//non-nil or nil thumbnail|imageView"ScrollToWord",				"/*2.x*/words,hilite",	//myeditView"SelectAll",				"/*2.1*/",				//canvas newtworks 2.1"Send",						"/*1.x.PF*/transportSym,item",	//new iobox entry. platform func 1.x"SendRemoteControlCode",	"/*1.x.PF*/IRconn,cmd,count", 	// platform func"SetAllInfo",				"/*1.x:SetAllInfoXmit*/frame",// store|soup"SetAllInfoXmit",			"/*2.x*/tag,val,changeSym",	//Soup"SetAnnotationMode",		"/*2.x*/theMode",			//imageView"SetClusterValue",			"buttonVal",				//cluster"SetConfig",				"/*2.x*/prefName,val",		//transport"SetContents",				"/*2.1*/shapes",			//viewDefView 2.1"SetDefaultStore",			"/*1.x.PF*/store",			// platform func 1.x"SetDone",					"/*2.x*/index,topic,done,propogateUp,propogateDown",	//list"SetDrawOrigin",			"/*2.1*/origin",				//TXView"SetEntryAlarm",			"/*2.x*/text,date,minsBefore",	//calendar"SetEventAlarm",			"/*2.x.PF*/x,y,z",		// platform func 2.0"SetExtrasInfo",			"/*PF*/paramFrame,newInfo",	//extrasDrawer. platform func 1.x"SetGeometry",				"/*2.1*/isPaged,wid,ht,margins",	//TXView 2.1"SetHilite",				"start,end,unique",		//view"SetHiliteRange",			"/*2.1*/newRange,showHilite,setKeyV",	//TXView"SetInfo",					"/*1.x:SetInfoXmit*/tag,val",	//store|soup"SetInfoXmit",				"/*2.x*/tag,val,changeSym",	//Soup"SetInputGain",				"/*2.x*/gain",			//Sets current input gain for channel globalFn|protoSoundChannel ??"SetInputSpec",				"inputSpec",			//nil endpoint"SetItemMark",				"index,mark",			//picker"SetLetter",				"newLetter,nil",		//tabs"SetLocation",				"whichCity",			//worldClock"SetMeetingIconType",		"/*2.x*/text,date,newIconType",	//calendar"SetMeetingInvitees",		"/*2.x*/text,date,invitees",	//calendar"SetMeetingLocation",		"/*2.x*/text,date,location",	//calendar"SetMeetingNotes",			"/*2.x*/text,date,notes",		//calendar"SetMessage",				"/*2.x*/msg",			//statusView"SetName",					"nameStr",				//nameString store|soup"SetNewWord",				"/*2.x*/str,nil",		//charEditView"SetNowShowing",			"/*2.x*/val",			//picker"SetOptions",				"/*1.x*/options",	//nil or error-code endpoint"SetOrigin",				"origX,origY",			//view"SetPassword",				"/*2.1*/str",			// passwordslip 2.1"SetPopup",					kArg0,					//view"SetPriority",				"/*2.x*/index,priority,undo",	//list//"SetReadOnly",			"index,status",			//list"SetRecordingLength",		"/*2.x*/len",			//Destructively trims recording buffer to lengthInByte s soundFrame"SetRepeatingEntryStopDate","/*2.x*/text,date,mtgStopDate",	//calendar//"SetSignature",			"signature",			//signaturestore|soup//"SetState",				"newState",				//endpoint"SetStatus",				"/*2.x*/kind,options",	//contextView"SetStatusDialog",			"/*2.x*/newStatus,name,vals",	//transport"SetStore",					"/*2.1*/store",			//TXView 2.1"Setup",					"/*2.x*/image",			//thumbnail"SetupAbstracts",			"/*2.x*/cursor",		//overview"SetUpCursor",				"/*2.x*/",				//myLayout,newtSoup"SetupIdle",				"msecs",				//view"SetUserConfig",			"/*1.x.PF*/configSym,val",	//val.  platform func 1.x"SetVolume",				"volume",				// soundchannel"SetWords",					"/*2.x*/words",			//wordInfo"Show",						kArg0,					//view"ShowBusyBox",				"/*2.x.PF*/showIt",		//platform function"ShowEntry",				"/*2.x*/entry",			//soupFinder"ShowFoundItem",			"/*2.x*/entry,cursor",	//display found itemview"ShowOrdinalItem",			"/*2.x*/ord",			//show 'firsts,'prev,'next,'last found itemfindProto"ShowRuler",				"/*2.1*/rulerSettings",	//TXView//"ShowStoryCard",			"sym,val,bounds",		//book"SimpleTextHeight",			"/*1.x.PF.TextBounds*/text,wid,font",	// platform func 1.x"SlideEffect",				"contentOffset,viewOffset,sound,methodName,methodParams",	//view"StandardFind",				"/*2.x*/what,soupName,results,statusContext,indexPath",	//view"Start",					"/*2.x*/async",			//Start playing or recording protoSoundChannel"StartFlush",				"/*2.x*/",				//myEntryView"State",					"/*2.x*/",				//state or nil endpoint"Status",					"/*2.x*/",				//cursor"Stop",						"/*2.x*/",				//Stop playing or recording endpoint|protoSoundChannel"StreamIn",					"/*2.x*/streamSpec",		//streamingEndpoint"StreamOut",				"/*2.x*/data,streamSpec",	//streamingEndpoint"StringToKeyCodes",			"/*2.1*/str",			// platform func 2.1"Submit",					"/*2.x*/item",			//add and send items in iobox ioBox"SuckPackageFromBinary",	"/*2.x*/binary,paramFrame",	//store"SuckPackageFromEndpoint",	"/*2.x*/endPoint,paramFrame",	//store"SupplantSoupDef",			"/*2.x.PF*/soup,soupDef",		// platform function"SyncChildren",				kArg0,					//view"SyncScroll",				"what,index,upDown",	//view"SyncView",					kArg0,					//view"SysBeep",					kArg0,					//rootView"Tapped",					"/*2.x*/action",		//context"TextSetup",				kArg0,					//picker"Toggle",					kArg0,					//view"ToggleCheck",				kArg0,					//checkBox"ToggleImage",				"/*2.x*/image,annotations,scalingInfo",	//imageView"ToggleThumbnail",			"/*2.x*/image",			//thumbnail//"ToggleTopic",			kArgIndex,				//nil list//"TopicBottom",			kArgIndex,				//lowest coordinate of topic list//"TopicHeight",			kArgIndex,				//height, in pixels, of a topic list"TotalSize",				kArg0,					//total bytes in medium store"TrackButton",				kArgUnit,				//view"TrackHilite",				kArgUnit,				//view//"TurnToContent",			"sym,val",				//book//"TurnToPage",				"page",					//book"UnBind",					"/*2.x*/cbSpec",		//endpoint"UnionSoupIsNull",			"/*1.x.PF*/unionSoup?",	// platform func 1.x?"Unlock",					"/*2.x*/",				//true if locked, nil if not store"UnRegEmailSystem",			"/*2.x.PF*/sym", 		// platform function 2.0"UnRegFindApps",			"/*1.x.PF*/appSym",		//nil. platform func 1.x"UnRegGlobalKeyboard",		"/*2.x.PF*/kbdSym,kbdTemplate", // platform function 2.0"UnRegInfoItem",			"/*2.x*/sym",			//calendar"UnregisterOpenKeyboard",	"/*2.x*/",				//view"UnRegLogin",				"/*2.x*/sym",			//sleepScreen"UnRegMeetingType",			"/*2.x*/sym",			//calendar"UnRegNamesRouteScript",	"/*2.x.PF*/sym",			// platform function 2.0"UnRegNewtWorksTool",		"/*2.1*/sym",			// 2.1"UnRegPagerType",			"/*PF*/sym", 			// platform function"UnRegPatterns",			"/*2.1*/sym",			//Unregister DrawApp patterns in drawApp ViewDef 2.1"UnRegPhoneType",			"/*PF*/sym", 			// platform function"UnRegStamps",				"/*2.1*/sym",			//Unregister DrawApp stamps in drawApp ViewDef 2.1"UnRegTool",				"/*2.1*/sym",			//Unregister DrawApp tool drawApp ViewDef 2.1"Update",					"/*2.x*/",				//thumbnail"UpdateAllScrollers",		"/*2.1*/view,totalHtChanged,scrolledV,totalWidChanged,scrolledH", // newtworks 2.1"UpdateIcon",				"/*2.x*/newIcon",			//picker"UpdateIndicator",			"/*2.x*/setup",			//statusView"UpdateRulerInfo",			"/*2.1*/rulerSettings",	//TXView"UpdateStatusBar",			"/*2.x*/",				//newtAppBase 2.1"UpdateText",				kArgVal,				//myProtoLine,labelpicker"UsedSize",					kArg0,					//bytes in use store"UseNewWord",				"/*2.x*/",				//charEditView"UseTextAndTemplate",		"/*2.x*/",				//charEditView"Validate",					"/*2.x*/nameRef,pathArray",	//array of paths that failed dataDef//"ViewCaretActivateScript","active",				//return value ignored view"viewAddDragInfoScript",	"/*2.x*/dragInfo",		// Misc Toolbox calls//"viewCaretChangedScript",	"/*2.x*/view,offset,len",	//non-nil if the remote writing preference is on view"viewChangedScript",		"slot,view",//"viewClickScript",			kArgUnit,				//view//"viewDragFeedbackScript",	"/*2.x*/dragInfo,dragPoint,show",	//true or nilview//"viewDrawDragBackgroundScript",	"/*2.x*/bounds,copy",	//true or nilview//"viewDrawDragDataScript",	"/*2.x*/bounds",		//true or nilview"viewDrawScript",			kArg0,	//view//"viewDropApproveScript",	"/*2.x*/destView",		//drop ok booleanview//"viewDropDoneScript",		"/*2.x*/dragRef,offset,lastDragPt,copy",	//handled booleanview//"viewDropMoveScript",		"/*2.x*/dragRef,offset,lastDragPt,copy",	//true or nilview//"viewDropRemoveScript",		"/*2.x*/dragRef",		//true or nilview//"viewDropScript",			"/*2.x*/dropType,dropDate,dropPt",	//true or nilview//"viewFindTargetScript",		"/*2.x*/dragInfo",		//viewview"viewGestureScript",		"unit,gestureID",		//handled booleanview//"viewGetDropDataScript",	"/*2.x*/dragType,dragRef",	//frameview//"viewGetDropTypesScript",	"/*2.x*/dropPt",		//an array of symbols or nilview"viewHideScript",			kArg0,					//view"viewHiliteScript",			"on",					//view//"viewIdleScript",			kArg0,					//view//"viewInkWordScript",		"/*2.x*/stroke",		//true or nil view"viewIntoBitmap",			"/*2.x*/srcRect,destRect,destBitmap",	//nil view"viewIsOpen",				"/*PF*/view",	//platform function//"viewKeyDownScript",		"/*2.x*/char,flags",	//handled booleanview//"viewKeyRepeatScript",		"/*2.1*/char,flags",	//handled boolean view 2.1//"viewKeyStringScript",		"/*2.1*/str",	//view 2.1//"viewKeyUpScript",			"/*2.x*/char,flags",	//handled booleanview"viewOverviewScript",		kArg0,	//view"viewPostQuitScript",		"/*2.x*/",	//view"viewQuitScript",			kArg0,	//'postQuit or nilview//"viewRawInkScript",			"/*2.x*/stroke",	//true or nilview"ViewScroll2DScript",		"dir,extras",		//ScrollView"viewScrollDownScript",		kArg0,	//view"viewScrollUpScript",		kArg0,	//view"ViewSet",					"/*2.x*/setup",	//statusView"viewSetupChildrenScript",	kArg0,	//view"viewSetupDoneScript",		kArg0,	//view"viewSetupFormScript",		kArg0,	//view"viewShowScript",			kArg0,	//view//"viewStrokeScript",			kArgUnit,	//handled booleanview"viewWordScript",			kArgUnit,	//handled booleanview//"VoteOnWordUnit",			kArgUnit,	//a constant or integer view"WhichEnd",					"/*2.x*/",						//begin, end or nil cursor//"WriteBytes",				"data",						//endpoint//"WriteCommand",			"cmd,data,writeData",	//endpoint//"WriteCommandHeader",		"cmd,len",				//endpoint//"YoungerSister",			kArgIndex,	//index of next topic at same level or nillist"ZeroOneOrMore",			"/*2.x*/",			//soupFinder"ZoomBy",					"/*2.x*/dir",		//imageView"ZoomTo",					"/*2.x*/imageSz",	//imageView"ZoomToBox",				"/*2.x*/bounds",	//imageView]);